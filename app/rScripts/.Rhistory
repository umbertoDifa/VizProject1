View(newData)
newData[,"year"==2014]
newData[,"year"]==2014
a<-newData[,"year"]==2014
a
a<-newData[,"year"]=="2014"
a
newData[,"year"]
newData[,"year"]=="2014"
newData[,"year"=="2014"]
newData[,"year"]=="2014"
newData[newData[,"year"]=="2014",]
newData[,"year"]=="2014"
a
newData[,"year"]
unique(newData[,"year"])
newData[,"year"]!='2014'
newData[,"stateName"]!='United States'
newData[,"stateName"]
newData["2014",]
rowNames(newData)<-NULL
rownames(newData)<-NULL
newData[,"year"]!='2014'
newData[newData[,"year"]=="2014",]
newData[,"year"]!='2014'
newData[newData[,"year"]!='2014',]
a<-newData[newData[,"year"]!='2014',]
View(a)
a<-newData[newData[,"year"]=='2014',]
newData<-newData[newData[,"year"]=='2014',]
write.csv(newData, file = "usPopulation.csv",row.names=FALSE)
#cleaning data from https://www.census.gov/population/international/data/idb/region.php
#clead data IDBext194
#import demographic data and add redable col names
data <- read.csv("C:/wamp/www/viz/data/IDB_DataSet/IDBext194-semicolon.txt", header=FALSE, sep=";")
nomiRighe<- c("stateCode","year","sex","maxAge")
ages<-as.character(0:100)
columnNames<-c(nomiRighe,ages)
colnames(data)<-columnNames
#import states code and names and add redable col names
states <- read.csv("C:/wamp/www/viz/data/IDB_DataSet/IDBextCTYS-semicolon.txt", header=FALSE, sep=";")
nomiCol<-c("stateCode","stateName","area")
colnames(states)<-nomiCol
#join the data so that data has the state name instead of the code
#data[,"area"]<-states[states[,"stateCode"] == data[,"area"],"stateName"]
merged<-merge(states,data,by="stateCode")
merged[,"stateName"]<-as.character(merged[,"stateName"])
#italy<-merged[merged[,"stateName"]=="Italy",] #select only those row of italy
#write.csv(merged, file = "allData.csv",row.names=FALSE)
dataUntil2015<-merged[merged[,"year"]<=2015,]
#remove stateCode and maxAge
#select only data before 2015
drops <- c("stateCode","maxAge","area")
dataUntil2015<-dataUntil2015[,!(names(dataUntil2015) %in% drops)]
#select wanted states
wantedStates<- c("Italy","Brazil","United States","Vietnam","China","Australia")
data <- read.csv("C:/wamp/www/viz/data/IDB_DataSet/IDBext194-semicolon.txt", header=FALSE, sep=";")
nomiRighe<- c("stateCode","year","sex","maxAge")
ages<-as.character(0:100)
columnNames<-c(nomiRighe,ages)
colnames(data)<-columnNames
#import states code and names and add redable col names
states <- read.csv("C:/wamp/www/viz/data/IDB_DataSet/IDBextCTYS-semicolon.txt", header=FALSE, sep=";")
nomiCol<-c("stateCode","stateName","area")
colnames(states)<-nomiCol
#join the data so that data has the state name instead of the code
#data[,"area"]<-states[states[,"stateCode"] == data[,"area"],"stateName"]
merged<-merge(states,data,by="stateCode")
merged[,"stateName"]<-as.character(merged[,"stateName"])
#italy<-merged[merged[,"stateName"]=="Italy",] #select only those row of italy
#write.csv(merged, file = "allData.csv",row.names=FALSE)
#select only data of 2014
dataUntil2015<-merged[merged[,"year"]==2015,]
#remove stateCode and maxAge
drops <- c("stateCode","maxAge","area")
dataUntil2015<-dataUntil2015[,!(names(dataUntil2015) %in% drops)]
#select wanted states
#wantedStates<- c("Italy","Brazil","United States","Vietnam","China","Australia")
#dataUntil2015<-dataUntil2015[dataUntil2015[,"stateName"] %in% wantedStates,]
#write.csv(dataUntil2015, file = "dataUntil2015sexDistinction.csv",row.names=FALSE)
#select only names of states and save them
ins<-c("stateName","year")
stati<-dataUntil2015[,(names(dataUntil2015) %in% ins)]
View(dataUntil2015)
#cleaning data from https://www.census.gov/population/international/data/idb/region.php
#clead data IDBext194
#import demographic data and add redable col names
data <- read.csv("C:/wamp/www/viz/data/IDB_DataSet/IDBext194-semicolon.txt", header=FALSE, sep=";")
nomiRighe<- c("stateCode","year","sex","maxAge")
ages<-as.character(0:100)
columnNames<-c(nomiRighe,ages)
colnames(data)<-columnNames
#import states code and names and add redable col names
states <- read.csv("C:/wamp/www/viz/data/IDB_DataSet/IDBextCTYS-semicolon.txt", header=FALSE, sep=";")
nomiCol<-c("stateCode","stateName","area")
colnames(states)<-nomiCol
#join the data so that data has the state name instead of the code
#data[,"area"]<-states[states[,"stateCode"] == data[,"area"],"stateName"]
merged<-merge(states,data,by="stateCode")
merged[,"stateName"]<-as.character(merged[,"stateName"])
#italy<-merged[merged[,"stateName"]=="Italy",] #select only those row of italy
#write.csv(merged, file = "allData.csv",row.names=FALSE)
#select only data of 2014
dataUntil2015<-merged[merged[,"year"]==2014,]
#remove stateCode and maxAge
drops <- c("stateCode","maxAge","area")
dataUntil2015<-dataUntil2015[,!(names(dataUntil2015) %in% drops)]
#select wanted states
#wantedStates<- c("Italy","Brazil","United States","Vietnam","China","Australia")
#dataUntil2015<-dataUntil2015[dataUntil2015[,"stateName"] %in% wantedStates,]
View(dataUntil2015)
write.csv(dataUntil2015, file = "dataof2014sexDistinction.csv",row.names=FALSE)
#cleaning data from https://www.census.gov/population/international/data/idb/region.php
#clead data IDBext194
#import demographic data and add redable col names
data <- read.csv("C:/wamp/www/viz/data/IDB_DataSet/IDBext194-semicolon.txt", header=FALSE, sep=";")
nomiRighe<- c("stateCode","year","sex","maxAge")
ages<-as.character(0:100)
columnNames<-c(nomiRighe,ages)
colnames(data)<-columnNames
#import states code and names and add redable col names
states <- read.csv("C:/wamp/www/viz/data/IDB_DataSet/IDBextCTYS-semicolon.txt", header=FALSE, sep=";")
nomiCol<-c("stateCode","stateName","area")
colnames(states)<-nomiCol
#join the data so that data has the state name instead of the code
#import demographic data and add redable col names
data <- read.csv("C:/wamp/www/viz/project1/data/IDB_DataSet/IDBext194-semicolon.txt", header=FALSE, sep=";")
nomiRighe<- c("stateCode","year","sex","maxAge")
ages<-as.character(0:100)
columnNames<-c(nomiRighe,ages)
colnames(data)<-columnNames
#import states code and names and add redable col names
states <- read.csv("C:/wamp/www/viz/data/IDB_DataSet/IDBextCTYS-semicolon.txt", header=FALSE, sep=";")
nomiCol<-c("stateCode","stateName","area")
colnames(states)<-nomiCol
#join the data so that data has the state name instead of the code
#data[,"area"]<-states[states[,"stateCode"] == data[,"area"],"stateName"]
merged<-merge(states,data,by="stateCode")
merged[,"stateName"]<-as.character(merged[,"stateName"])
#italy<-merged[merged[,"stateName"]=="Italy",] #select only those row of italy
#write.csv(merged, file = "allData.csv",row.names=FALSE)
#select only data of 2014
dataUntil2015<-merged[merged[,"year"]==2014,]
#remove stateCode and maxAge
drops <- c("stateCode","maxAge","area")
dataUntil2015<-dataUntil2015[,!(names(dataUntil2015) %in% drops)]
#select wanted states
#wantedStates<- c("Italy","Brazil","United States","Vietnam","China","Australia")
#dataUntil2015<-dataUntil2015[dataUntil2015[,"stateName"] %in% wantedStates,]
write.csv(dataUntil2015, file = "dataof2014sexDistinction.csv",row.names=FALSE)
#select only names of states and save them
data <- read.csv("C:/wamp/www/viz/project1/data/IDB_DataSet/IDBext194-semicolon.txt", header=FALSE, sep=";")
nomiRighe<- c("stateCode","year","sex","maxAge")
ages<-as.character(0:100)
columnNames<-c(nomiRighe,ages)
colnames(data)<-columnNames
#import states code and names and add redable col names
states <- read.csv("C:/wamp/www/viz/project1/data/IDB_DataSet/IDBextCTYS-semicolon.txt", header=FALSE, sep=";")
nomiCol<-c("stateCode","stateName","area")
colnames(states)<-nomiCol
#join the data so that data has the state name instead of the code
#data[,"area"]<-states[states[,"stateCode"] == data[,"area"],"stateName"]
merged<-merge(states,data,by="stateCode")
merged[,"stateName"]<-as.character(merged[,"stateName"])
#italy<-merged[merged[,"stateName"]=="Italy",] #select only those row of italy
#write.csv(merged, file = "allData.csv",row.names=FALSE)
#select only data of 2014
dataUntil2015<-merged[merged[,"year"]==2014,]
#remove stateCode and maxAge
drops <- c("stateCode","maxAge","area")
dataUntil2015<-dataUntil2015[,!(names(dataUntil2015) %in% drops)]
#select wanted states
#wantedStates<- c("Italy","Brazil","United States","Vietnam","China","Australia")
#dataUntil2015<-dataUntil2015[dataUntil2015[,"stateName"] %in% wantedStates,]
View(dataUntil2015)
dataUntil2015[,"sex"]==2
dataUntil2015[dataUntil2015[,"sex"]==2 , ]
dataUntil2015[dataUntil2015[,"sex"]==2 , "sex"]
dataUntil2015[dataUntil2015[,"sex"]==2 , "sex"]<-1
View(dataUntil2015)
dataUntil2015[dataUntil2015[,"sex"]==3 , "sex"]<-2
View(dataUntil2015)
0:100
?rowSums
rowSums(dataUntil2015[,c(0:100)])
rowSums(dataUntil2015[,c(4:5)])
asd<-rowSums(dataUntil2015[,c(4:5)])
asd<-rowSums(dataUntil2015[,c(4:104)])
dataUntil2015[1,c(4:104)]
cbind(dataUntil2015,sumOfRows)
sumOfRows<-rowSums(dataUntil2015[,c(4:104)])
cbind(dataUntil2015,sumOfRows)
dataUntil2015[1,]
dataUntil2015<-cbind(dataUntil2015,sumOfRows)
dataUntil2015[1,]
dataUntil2015[2,]
dataUntil2015[10,]
dataUntil2015[,"stateName"]=="United States"
dataUntil2015[dataUntil2015[,"stateName"]=="United States",]
names(dataUntil2014)[names(dataUntil2014) == 'sumOfRows'] <- '999'
names(dataUntil2015)[names(dataUntil2015) == 'sumOfRows'] <- '999'
dataUntil2015[dataUntil2015[,"stateName"]=="United States",]
?colSums
colSums(dataUntil2015[,c(4:104)])
colSums(dataUntil2015[1,c(4:104)])
colSums(dataUntil2015[1:2,c(4:104)])
colSums(dataUntil2015[1:2,c(4:105)])
aggregate?
.
?aggregate
aggregate(dataUntil2015, by = "stateName")
aggregate(dataUntil2015, by = "stateName",FUN=sum)
aggregate(dataUntil2015, by =list("stateName"),FUN=sum)
aggregate(dataUntil2015[,c(4:105)], by =list("stateName"),FUN=sum)
aggregate(dataUntil2015[1:2,c(4:105)], by =list("stateName"),FUN=sum)
aggregate(dataUntil2015[,c(4:105)], by =list("stateName"),FUN=sum)
aggregate(dataUntil2015[,c(4:105)], by =list("stateNamfe"),FUN=sum)
aggregate(dataUntil2015[,c(4:105)], by =list(stateName = dataUntil2015$stateName),FUN=sum)
out<-aggregate(dataUntil2015[,c(4:105)], by =list(stateName = dataUntil2015$stateName),FUN=sum)
View(out)
out[1,]
rep("year",3)
rep("year",nrow(dataUntil2015))
rep("2014",nrow(dataUntil2015))
sumByState<-aggregate(dataUntil2015[,c(4:105)], by =list(stateName = dataUntil2015$stateName),FUN=sum)
rep("2014",nrow(sumByState))
data.matrix(rep(2014,nrow(sumByState)))
years<-data.matrix(rep(2014,nrow(sumByState)))
sexs<-data.matrix(rep(0,nrow(sumByState)))
rbind(years,sumByState)
cbind(years,sumByState)
ghj<-cbind(years,sumByState)
View(ghj)
nrow(dataUntil2015)
nrow(dataUntil2015)/2
sumByState<-cbind(sexs,sumByState)
sumByState<-cbind(years,sumByState)
View(sumByState)
rbind(dataUntil2015,sumByState)
View(sumByState)
sumByState<-aggregate(dataUntil2015[,c(4:105)], by =list(stateName = dataUntil2015$stateName),FUN=sum)
#add year and sex to the calculated sum
year<-data.matrix(rep(2014,nrow(sumByState)))
sex<-data.matrix(rep(0,nrow(sumByState)))
sumByState<-cbind(sexs,sumByState)
sumByState<-cbind(years,sumByState)
View(sumByState)
sumByState<-aggregate(dataUntil2015[,c(4:105)], by =list(stateName = dataUntil2015$stateName),FUN=sum)
#add year and sex to the calculated sum
year<-data.matrix(rep(2014,nrow(sumByState)))
sex<-data.matrix(rep(0,nrow(sumByState)))
sumByState<-cbind(sex,sumByState)
sumByState<-cbind(year,sumByState)
View(sumByState)
#add total population to dataUntil2015
rbind(dataUntil2015,sumByState)
asdf<-rbind(dataUntil2015,sumByState)
View(asdf)
dataUntil2015<-rbind(dataUntil2015,sumByState)
write.csv(dataUntil2015, file = "dataof2014sexDistinction.csv",row.names=FALSE)
#import demographic data and add redable col names
data <- read.csv("C:/wamp/www/viz/project1/data/IDB_DataSet/IDBext194-semicolon.txt", header=FALSE, sep=";")
nomiRighe<- c("stateCode","year","sex","maxAge")
ages<-as.character(0:100)
columnNames<-c(nomiRighe,ages)
colnames(data)<-columnNames
#import states code and names and add redable col names
states <- read.csv("C:/wamp/www/viz/project1/data/IDB_DataSet/IDBextCTYS-semicolon.txt", header=FALSE, sep=";")
nomiCol<-c("stateCode","stateName","area")
colnames(states)<-nomiCol
#join the data so that data has the state name instead of the code
#data[,"area"]<-states[states[,"stateCode"] == data[,"area"],"stateName"]
merged<-merge(states,data,by="stateCode")
merged[,"stateName"]<-as.character(merged[,"stateName"])
#italy<-merged[merged[,"stateName"]=="Italy",] #select only those row of italy
#write.csv(merged, file = "allData.csv",row.names=FALSE)
#select only data of 2014
dataUntil2015<-merged[merged[,"year"]==2014,]
#remove stateCode and maxAge
drops <- c("stateCode","maxAge","area")
dataUntil2015<-dataUntil2015[,!(names(dataUntil2015) %in% drops)]
#select wanted states
wantedStates<- c("Italy","Brazil","United States","Vietnam","China","Australia")
dataUntil2015<-dataUntil2015[!(dataUntil2015[,"stateName"] %in% wantedStates),]
View(dataUntil2015)
data <- read.csv("C:/wamp/www/viz/project1/data/IDB_DataSet/IDBext194-semicolon.txt", header=FALSE, sep=";")
nomiRighe<- c("stateCode","year","sex","maxAge")
ages<-as.character(0:100)
columnNames<-c(nomiRighe,ages)
colnames(data)<-columnNames
#import states code and names and add redable col names
states <- read.csv("C:/wamp/www/viz/project1/data/IDB_DataSet/IDBextCTYS-semicolon.txt", header=FALSE, sep=";")
nomiCol<-c("stateCode","stateName","area")
colnames(states)<-nomiCol
#join the data so that data has the state name instead of the code
#data[,"area"]<-states[states[,"stateCode"] == data[,"area"],"stateName"]
merged<-merge(states,data,by="stateCode")
merged[,"stateName"]<-as.character(merged[,"stateName"])
#italy<-merged[merged[,"stateName"]=="Italy",] #select only those row of italy
#write.csv(merged, file = "allData.csv",row.names=FALSE)
#select only data of 2014
dataUntil2015<-dataUntil2015[,!(names(dataUntil2015) %in% drops)]
dataUntil2015<-merged[merged[,"year"]==2014,]
#remove stateCode and maxAge
drops <- c("stateCode","maxAge","area")
#select wanted states
wantedStates<- c("Italy","Brazil","United States","Vietnam","China","Australia")
dataUntil2015<-dataUntil2015[(dataUntil2015[,"stateName"] %in% wantedStates),]
View(dataUntil2015)
#change code for man and women to 1 and 2
dataUntil2015[dataUntil2015[,"sex"]==2 , "sex"]<-1
dataUntil2015[dataUntil2015[,"sex"]==3 , "sex"]<-2
#add column with total population at the end
sumOfRows<-rowSums(dataUntil2015[,c(4:104)])
dataUntil2015<-cbind(dataUntil2015,sumOfRows)
#change name of last columsn
names(dataUntil2015)[names(dataUntil2015) == 'sumOfRows'] <- '999'
#sum m+f to obtain total population
sumByState<-aggregate(dataUntil2015[,c(4:105)], by =list(stateName = dataUntil2015$stateName),FUN=sum)
#add year and sex to the calculated sum
year<-data.matrix(rep(2014,nrow(sumByState)))
sex<-data.matrix(rep(0,nrow(sumByState)))
sumByState<-cbind(sex,sumByState)
sumByState<-cbind(year,sumByState)
#add total population to dataUntil2015
dataUntil2015<-rbind(dataUntil2015,sumByState)
write.csv(dataUntil2015, file = "dataof2014sexDistinction.csv",row.names=FALSE)
#cleaning data from https://www.census.gov/population/international/data/idb/region.php
#clead data IDBext194
#import demographic data and add redable col names
data <- read.csv("C:/wamp/www/viz/project1/data/IDB_DataSet/IDBext194-semicolon.txt", header=FALSE, sep=";")
nomiRighe<- c("stateCode","year","sex","maxAge")
ages<-as.character(0:100)
columnNames<-c(nomiRighe,ages)
colnames(data)<-columnNames
#import states code and names and add redable col names
states <- read.csv("C:/wamp/www/viz/project1/data/IDB_DataSet/IDBextCTYS-semicolon.txt", header=FALSE, sep=";")
nomiCol<-c("stateCode","stateName","area")
colnames(states)<-nomiCol
#join the data so that data has the state name instead of the code
#data[,"area"]<-states[states[,"stateCode"] == data[,"area"],"stateName"]
merged<-merge(states,data,by="stateCode")
merged[,"stateName"]<-as.character(merged[,"stateName"])
#italy<-merged[merged[,"stateName"]=="Italy",] #select only those row of italy
#write.csv(merged, file = "allData.csv",row.names=FALSE)
#select only data of 2014
dataUntil2015<-merged[merged[,"year"]==2014,]
#remove stateCode and maxAge
drops <- c("stateCode","maxAge","area")
dataUntil2015<-dataUntil2015[,!(names(dataUntil2015) %in% drops)]
#select wanted states
wantedStates<- c("Italy","Brazil","United States","Vietnam","China","Australia")
dataUntil2015<-dataUntil2015[(dataUntil2015[,"stateName"] %in% wantedStates),]
#change code for man and women to 1 and 2
dataUntil2015[dataUntil2015[,"sex"]==2 , "sex"]<-1
dataUntil2015[dataUntil2015[,"sex"]==3 , "sex"]<-2
sumOfRows<-rowSums(dataUntil2015[,c(4:104)])
View(dataUntil2015)
data <- read.csv("C:/wamp/www/viz/project1/data/IDB_DataSet/IDBext194-semicolon.txt", header=FALSE, sep=";")
nomiRighe<- c("stateCode","year","sex","maxAge")
ages<-as.character(0:100)
columnNames<-c(nomiRighe,ages)
colnames(data)<-columnNames
#import states code and names and add redable col names
nomiCol<-c("stateCode","stateName","area")
states <- read.csv("C:/wamp/www/viz/project1/data/IDB_DataSet/IDBextCTYS-semicolon.txt", header=FALSE, sep=";")
colnames(states)<-nomiCol
#join the data so that data has the state name instead of the code
#data[,"area"]<-states[states[,"stateCode"] == data[,"area"],"stateName"]
merged<-merge(states,data,by="stateCode")
merged[,"stateName"]<-as.character(merged[,"stateName"])
#italy<-merged[merged[,"stateName"]=="Italy",] #select only those row of italy
#write.csv(merged, file = "allData.csv",row.names=FALSE)
#select only data of 2014
dataUntil2015<-merged[merged[,"year"]==2014,]
#remove stateCode and maxAge
drops <- c("stateCode","maxAge","area")
dataUntil2015<-dataUntil2015[,!(names(dataUntil2015) %in% drops)]
#select wanted states
wantedStates<- c("Italy","Brazil","United States","Vietnam","China","Australia")
dataUntil2015<-dataUntil2015[(dataUntil2015[,"stateName"] %in% wantedStates),]
#change code for man and women to 1 and 2
dataUntil2015[dataUntil2015[,"sex"]==2 , "sex"]<-1
dataUntil2015[dataUntil2015[,"sex"]==3 , "sex"]<-2
View(dataUntil2015)
sumOfRows<-rowSums(dataUntil2015[,c(4:104)])
sumOfRows
dataUntil2015<-cbind(dataUntil2015,sumOfRows)
View(dataUntil2015)
names(dataUntil2015)[names(dataUntil2015) == 'sumOfRows'] <- '999'
sumByState<-aggregate(dataUntil2015[,c(4:105)], by =list(stateName = dataUntil2015$stateName),FUN=sum)
View(sumByState)
year<-data.matrix(rep(2014,nrow(sumByState)))
sex<-data.matrix(rep(0,nrow(sumByState)))
nrow(sumByState)
sumByState<-cbind(sex,sumByState)
sumByState<-cbind(year,sumByState)
View(sumByState)
dataUntil2015<-rbind(dataUntil2015,sumByState)
write.csv(dataUntil2015, file = "dataof2014sexDistinction.csv",row.names=FALSE)
ins<-c("stateName")
stati<-dataUntil2015[,(names(dataUntil2015) %in% ins)]
statiSingle<-unique(stati[,"stateName"])
statiSingle<-unique(stati)
data <- read.csv("C:/wamp/www/viz/project1/data/IDB_DataSet/IDBext194-semicolon.txt", header=FALSE, sep=";")
nomiRighe<- c("stateCode","year","sex","maxAge")
ages<-as.character(0:100)
columnNames<-c(nomiRighe,ages)
colnames(data)<-columnNames
#import states code and names and add redable col names
states <- read.csv("C:/wamp/www/viz/project1/data/IDB_DataSet/IDBextCTYS-semicolon.txt", header=FALSE, sep=";")
nomiCol<-c("stateCode","stateName","area")
colnames(states)<-nomiCol
#join the data so that data has the state name instead of the code
#data[,"area"]<-states[states[,"stateCode"] == data[,"area"],"stateName"]
merged<-merge(states,data,by="stateCode")
merged[,"stateName"]<-as.character(merged[,"stateName"])
#italy<-merged[merged[,"stateName"]=="Italy",] #select only those row of italy
#write.csv(merged, file = "allData.csv",row.names=FALSE)
#select only data of 2014
dataUntil2015<-merged[merged[,"year"]==2014,]
#remove stateCode and maxAge
drops <- c("stateCode","maxAge","area")
dataUntil2015<-dataUntil2015[,!(names(dataUntil2015) %in% drops)]
View(dataUntil2015)
wantedStates<- c("Italy","Brazil","United States","Vietnam","China","Australia","United Arab Emirates","Afghanistan","Algeria","Argentina","Belgium","Bolivia","Canada","Chile","Colombia","Cuba","Egypt","Ethiopia","Greece","Iceland","Indonesia","India","Iran","Israel","Japan","Iraq","Mexico","Nigeria","Norway","Bosnia and Herzegovina
","Kosovo","Poland","South Africa","Sudan","Turkey","Ukraine","Uzbekistan")
dataUntil2015<-dataUntil2015[(dataUntil2015[,"stateName"] %in% wantedStates),]
#change code for man and women to 1 and 2
dataUntil2015[dataUntil2015[,"sex"]==2 , "sex"]<-1
dataUntil2015[dataUntil2015[,"sex"]==3 , "sex"]<-2
#add column with total population at the end
sumOfRows<-rowSums(dataUntil2015[,c(4:104)])
dataUntil2015<-cbind(dataUntil2015,sumOfRows)
#change name of last columsn
names(dataUntil2015)[names(dataUntil2015) == 'sumOfRows'] <- '999'
#sum m+f to obtain total population
sumByState<-aggregate(dataUntil2015[,c(4:105)], by =list(stateName = dataUntil2015$stateName),FUN=sum)
#add year and sex to the calculated sum
year<-data.matrix(rep(2014,nrow(sumByState)))
sex<-data.matrix(rep(0,nrow(sumByState)))
sumByState<-cbind(sex,sumByState)
sumByState<-cbind(year,sumByState)
#add total population to dataUntil2015
dataUntil2015<-rbind(dataUntil2015,sumByState)
write.csv(dataUntil2015, file = "dataof2014sexDistinction.csv",row.names=FALSE)
#select only names of states and save them
ins<-c("stateName")
stati<-dataUntil2015[,(names(dataUntil2015) %in% ins)]
#discover lower bound for year comparisons
#res<-aggregate(year ~ stateName, stati, function(x) min(x))
#lowerBound<-max(res["year"])
#stati<-stati[stati[,"year"]>=lowerBound,]
statiSingle<-unique(stati)
#anni<-unique(stati[,"year"])
write.csv(statiSingle, file = "worldStateNames.csv",row.names=FALSE)
data <- read.csv("C:/wamp/www/viz/project1/data/IDB_DataSet/IDBext194-semicolon.txt", header=FALSE, sep=";")
nomiRighe<- c("stateCode","year","sex","maxAge")
ages<-as.character(0:100)
columnNames<-c(nomiRighe,ages)
colnames(data)<-columnNames
#import states code and names and add redable col names
states <- read.csv("C:/wamp/www/viz/project1/data/IDB_DataSet/IDBextCTYS-semicolon.txt", header=FALSE, sep=";")
nomiCol<-c("stateCode","stateName","area")
colnames(states)<-nomiCol
#join the data so that data has the state name instead of the code
#data[,"area"]<-states[states[,"stateCode"] == data[,"area"],"stateName"]
merged<-merge(states,data,by="stateCode")
merged[,"stateName"]<-as.character(merged[,"stateName"])
#italy<-merged[merged[,"stateName"]=="Italy",] #select only those row of italy
#write.csv(merged, file = "allData.csv",row.names=FALSE)
#select only data of 2014
dataUntil2015<-merged[merged[,"year"]==2014,]
#remove stateCode and maxAge
drops <- c("stateCode","maxAge","area")
dataUntil2015<-dataUntil2015[,!(names(dataUntil2015) %in% drops)]
#select wanted states
View(dataUntil2015)
wantedStates<- c("Italy","Brazil","United States","Vietnam","China","Australia","United Arab Emirates","Afghanistan","Algeria","Argentina","Belgium","Bolivia","Canada","Chile","Colombia","Cuba","Egypt","Ethiopia","Greece","Iceland","Indonesia","India","Iran","Israel","Japan","Iraq","Mexico","Nigeria","Norway","Bosnia and Herzegovina","Kosovo","Poland","South Africa","Sudan","Turkey","Ukraine","Uzbekistan")
wantedStates
dataUntil2015[(dataUntil2015[,"stateName"] %in% wantedStates),]
asdf<-dataUntil2015[(dataUntil2015[,"stateName"] %in% wantedStates),]
View(asdf)
dataUntil2015<-dataUntil2015[(dataUntil2015[,"stateName"] %in% wantedStates),]
#change code for man and women to 1 and 2
dataUntil2015[dataUntil2015[,"sex"]==2 , "sex"]<-1
dataUntil2015[dataUntil2015[,"sex"]==3 , "sex"]<-2
#add column with total population at the end
sumOfRows<-rowSums(dataUntil2015[,c(4:104)])
dataUntil2015<-cbind(dataUntil2015,sumOfRows)
#change name of last columsn
names(dataUntil2015)[names(dataUntil2015) == 'sumOfRows'] <- '999'
#sum m+f to obtain total population
sumByState<-aggregate(dataUntil2015[,c(4:105)], by =list(stateName = dataUntil2015$stateName),FUN=sum)
#add year and sex to the calculated sum
year<-data.matrix(rep(2014,nrow(sumByState)))
sex<-data.matrix(rep(0,nrow(sumByState)))
sumByState<-cbind(sex,sumByState)
sumByState<-cbind(year,sumByState)
#add total population to dataUntil2015
dataUntil2015<-rbind(dataUntil2015,sumByState)
write.csv(dataUntil2015, file = "dataof2014sexDistinction.csv",row.names=FALSE)
#select only names of states and save them
ins<-c("stateName")
stati<-dataUntil2015[,(names(dataUntil2015) %in% ins)]
#discover lower bound for year comparisons
#res<-aggregate(year ~ stateName, stati, function(x) min(x))
#lowerBound<-max(res["year"])
#stati<-stati[stati[,"year"]>=lowerBound,]
statiSingle<-unique(stati)
#anni<-unique(stati[,"year"])
write.csv(statiSingle, file = "worldStateNames.csv",row.names=FALSE)
